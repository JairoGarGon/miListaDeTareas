{"version":3,"sources":["componentes/Header.js","componentes/FormularioTareas.js","componentes/Tarea.js","componentes/ListaTareas.js","App.js","index.js"],"names":["Header","mostrarCompletadas","cambiarMostrarCompletadas","toggleCompletadas","className","onClick","icon","faEyeSlash","faEye","FormularioTareas","tareas","cambiarTareas","useState","inputTarea","cambiarInputTarea","action","onSubmit","e","preventDefault","id","uuidv4","texto","completada","type","placeholder","value","onChange","target","handleInput","faPlusSquare","Tarea","tarea","toggleCompletada","editarTarea","borrarTarea","editandoTarea","cambiarEditandoTarea","nuevaTarea","cambiarNuevaTarea","faCheckSquare","faSquare","faEdit","faTimes","ListaTareas","map","nuevoTexto","filter","length","App","tareasGuardadas","localStorage","getItem","JSON","parse","useEffect","setItem","stringify","configMostrarCompletadas","toString","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2f95de5f.chunk.js","sourcesContent":["import React from 'react';\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport {faEye, faEyeSlash} from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst Header = ({mostrarCompletadas, cambiarMostrarCompletadas}) => {\r\n    const toggleCompletadas=()=>{\r\n        cambiarMostrarCompletadas(!mostrarCompletadas);\r\n    }\r\n\r\n    return(\r\n        <header className=\"header\">\r\n            <h1 className=\"header__titulo\">Lista de Tareas</h1>\r\n            {mostrarCompletadas ?\r\n                <button \r\n                    onClick={() => toggleCompletadas()}\r\n                    className=\"header__boton\">\r\n                    No mostrar completadas\r\n                    <FontAwesomeIcon icon={faEyeSlash} className=\"header__icono-boton\" />\r\n                </button>\r\n            :\r\n                <button \r\n                    onClick={() => toggleCompletadas()} \r\n                    className=\"header__boton\">\r\n                    Mostrar completadas\r\n                    <FontAwesomeIcon icon={faEye} className=\"header__icono-boton\" />\r\n                </button>    \r\n            }\r\n            \r\n        </header>\r\n    );\r\n}\r\n\r\nexport default Header;","import React, {useState} from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport {faPlusSquare} from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst FormularioTareas = ({tareas, cambiarTareas}) => {\r\n    const [inputTarea, cambiarInputTarea]=useState('');\r\n    const handleInput=(e)=>{\r\n        cambiarInputTarea(e.target.value)\r\n    }\r\n    const handleSubmit=(e)=>{\r\n        e.preventDefault();\r\n\r\n        cambiarTareas([...tareas,{\r\n            id: uuidv4,\r\n            texto: inputTarea,\r\n            completada:false\r\n        }]);\r\n        cambiarInputTarea('');\r\n    }\r\n\r\n    return(\r\n        <form action=\"\" className=\"formulario-tareas\" onSubmit={handleSubmit}>\r\n            <input\r\n                type=\"text\"\r\n                className=\"formulario-tareas__input\"\r\n                placeholder=\"Escribe una tarea\"\r\n                value={inputTarea}\r\n                onChange={(e)=> handleInput(e)}\r\n            />\r\n            <button\r\n                type=\"submit\"\r\n                className=\"formulario-tareas__btn\"\r\n            >\r\n                <FontAwesomeIcon\r\n                    icon={faPlusSquare}\r\n                    className=\"formulario-tareas__icono-btn\"\r\n                />\r\n            </button>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default FormularioTareas;","import React, {useState} from 'react';\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport {faCheckSquare, faEdit, faSquare, faTimes} from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst Tarea = ({tarea, toggleCompletada, editarTarea, borrarTarea}) => {\r\n    const [editandoTarea, cambiarEditandoTarea]=useState(false);\r\n    const [nuevaTarea, cambiarNuevaTarea]=useState(tarea.texto);\r\n\r\n    const handleSubmit=(e)=>{\r\n        e.preventDefault();\r\n        editarTarea(tarea.id, nuevaTarea);\r\n        cambiarEditandoTarea(false);\r\n    }\r\n\r\n    return(\r\n        <li className=\"lista-tareas__tarea\">\r\n            <FontAwesomeIcon \r\n                icon={tarea.completada ? faCheckSquare : faSquare}\r\n                className=\"lista-tareas__icono lista-tareas__icono-check\"\r\n                onClick={()=> toggleCompletada(tarea.id)}\r\n            />\r\n            <div className=\"lista-tareas__texto\">\r\n                {editandoTarea ?\r\n                <form action=\"\" className=\"formulario-editar-tarea\" onSubmit={handleSubmit}>\r\n                    <input\r\n                        type=\"text\"\r\n                        className=\"formulario-editar-tarea__input\"\r\n                        value={nuevaTarea}\r\n                        onChange={(e)=>cambiarNuevaTarea(e.target.value)}\r\n                    />\r\n                    <button\r\n                        type=\"submit\"\r\n                        className=\"formulario-editar-tarea__btn\"\r\n                    >Actualizar</button>\r\n                </form>\r\n                : tarea.texto\r\n                }\r\n            </div>\r\n            <div className=\"lista-tareas__contenedor-botones\">\r\n                <FontAwesomeIcon \r\n                    icon={faEdit}\r\n                    className=\"lista-tareas__icono lista-tareas__icono-accion\"\r\n                    onClick={()=>cambiarEditandoTarea(!editandoTarea)}\r\n                />\r\n                <FontAwesomeIcon \r\n                    icon={faTimes}\r\n                    className=\"lista-tareas__icono lista-tareas__icono-accion\"\r\n                    onClick={()=>borrarTarea(tarea.id)}\r\n                />\r\n            </div>\r\n            </li>\r\n    );\r\n}\r\n\r\nexport default Tarea;","import React from 'react';\r\nimport Tarea from './Tarea';\r\n\r\nconst ListaTareas = ({tareas, cambiarTareas, mostrarCompletadas}) => {\r\n    const toggleCompletada = (id) => {\r\n        cambiarTareas(tareas.map((tarea) => {\r\n            if(tarea.id === id){\r\n                return {...tarea, completada: !tarea.completada}\r\n            }\r\n            return tarea;\r\n        }));\r\n    }\r\n    const editarTarea = (id, nuevoTexto) => {\r\n        cambiarTareas(tareas.map((tarea) => {\r\n            if(tarea.id === id){\r\n                return {...tarea, texto: nuevoTexto}\r\n            }\r\n            return tarea;\r\n        }));\r\n    }  \r\n\r\n    const borrarTarea = (id) => {\r\n        cambiarTareas(tareas.filter((tarea) => {\r\n            if(tarea.id !== id){\r\n                return tarea;\r\n            }\r\n            return;\r\n        }));\r\n    }\r\n\r\n    return(\r\n        <ul className=\"lista-tareas\">\r\n            {tareas.length > 0 ? tareas.map((tarea) => {\r\n                if(mostrarCompletadas){\r\n                    return <Tarea\r\n                                key={tarea.id}\r\n                                tarea={tarea}\r\n                                toggleCompletada={toggleCompletada}\r\n                                editarTarea={editarTarea}\r\n                                borrarTarea={borrarTarea}\r\n                            />\r\n                } else if(!tarea.completada){\r\n                    return <Tarea\r\n                                key={tarea.id}\r\n                                tarea={tarea}\r\n                                toggleCompletada={toggleCompletada}\r\n                                editarTarea={editarTarea}\r\n                                borrarTarea={borrarTarea}\r\n                            />\r\n                }\r\n                return;\r\n            })\r\n            :<div className=\"lista-tareas__mensaje\">No hay tareas agregadas</div>\r\n            }\r\n        </ul>\r\n    );\r\n}\r\n\r\nexport default ListaTareas;","import React, {useState, useEffect} from 'react';\nimport './App.css';\nimport Header from './componentes/Header';\nimport FormularioTareas from './componentes/FormularioTareas';\nimport ListaTareas from './componentes/ListaTareas';\n\nconst App=()=> {\n  //Obtenemos las tareas guardadas de localstorage\n  const tareasGuardadas=\n     localStorage.getItem('tareas') ? JSON.parse(localStorage.getItem('tareas')) : [];\n  // Establecer el estado de las tareas\n  const [tareas, cambiarTareas]=useState(tareasGuardadas);\n  // Guardando el estado el localStorage\n     useEffect(() => {\n       localStorage.setItem('tareas', JSON.stringify(tareas));\n     }, [tareas])\n    //  accedemos a localStorage y comprobamos si monstrarCompletadas es null\n    let configMostrarCompletadas='';\n      if(localStorage.getItem('mostrarCompletadas')===null){\n        configMostrarCompletadas=true;\n      }else{\n        configMostrarCompletadas= localStorage.getItem('mostrarCompletadas')==='true';\n      }\n  const [mostrarCompletadas, cambiarMostrarCompletadas]=useState(configMostrarCompletadas);\n      useEffect(() => {\n        localStorage.setItem('mostrarCompletadas', mostrarCompletadas.toString());\n      }, [mostrarCompletadas])\n\n  return (\n    <div className=\"contenedor\">\n      <Header mostrarCompletadas={mostrarCompletadas} cambiarMostrarCompletadas={cambiarMostrarCompletadas} />\n      <FormularioTareas tareas={tareas} cambiarTareas={cambiarTareas} />\n      <ListaTareas \n        tareas={tareas}\n        cambiarTareas={cambiarTareas}\n        mostrarCompletadas={mostrarCompletadas}  \n      />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}